import asyncio
import logging
import os
import time
from telethon import TelegramClient, events

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
API_ID = 
API_HASH = 
SESSION_NAME = "userbot"

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (—ç–º—É–ª—è—Ü–∏—è —á–µ—Ä–µ–∑ —Å–ª–æ–≤–∞—Ä–∏)
ignored_users = set()
blacklist_users = set()
saved_templates = {}

client = TelegramClient(SESSION_NAME, API_ID, API_HASH)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_FILE = "userbot.log"
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[logging.FileHandler(LOG_FILE, mode='w'), logging.StreamHandler()]
)

# –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥
logging.info("Userbot –∑–∞–ø—É—â–µ–Ω.")

# –ò–≥–Ω–æ—Ä-–ª–∏—Å—Ç
@client.on(events.NewMessage)
async def ignore_handler(event):
    if event.sender_id in ignored_users:
        await event.delete()

@client.on(events.NewMessage(pattern=r"–õ \+–∏–≥–Ω–æ—Ä"))
async def add_ignore(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        ignored_users.add(reply.sender_id)
        await event.edit("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç")

@client.on(events.NewMessage(pattern=r"–õ -–∏–≥–Ω–æ—Ä"))
async def remove_ignore(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        ignored_users.discard(reply.sender_id)
        await event.edit("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω –∏–∑ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç–∞")

@client.on(events.NewMessage(pattern=r"–õ –∏–≥–Ω–æ—Ä—ã"))
async def list_ignores(event):
    if ignored_users:
        await event.edit(f"üë• –ò–≥–Ω–æ—Ä-–ª–∏—Å—Ç: {', '.join(map(str, ignored_users))}")
    else:
        await event.edit("üì≠ –ò–≥–Ω–æ—Ä-–ª–∏—Å—Ç –ø—É—Å—Ç")

# –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
@client.on(events.NewMessage(pattern=r"–õ \+—á—Å"))
async def add_blacklist(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        blacklist_users.add(reply.sender_id)
        await event.edit("üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ß–°")

@client.on(events.NewMessage(pattern=r"–õ -—á—Å"))
async def remove_blacklist(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        blacklist_users.discard(reply.sender_id)
        await event.edit("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω –∏–∑ –ß–°")

# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
@client.on(events.NewMessage(pattern=r"–õ –¥–¥(\d*)"))
async def delete_messages(event):
    count = event.pattern_match.group(1)
    count = int(count) if count else 2  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–¥–∞–ª—è–µ—Ç—Å—è 2 —Å–æ–æ–±—â–µ–Ω–∏—è (—Ç–µ–∫—É—â–µ–µ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ)
    
    async for msg in client.iter_messages(event.chat_id, from_user='me', limit=count):
        await msg.delete()
    
    await event.delete()  # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É

# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –õ–°
@client.on(events.NewMessage(pattern=r"–õ –≤–ª—Å (.+)"))
async def send_pm(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        text = event.pattern_match.group(1)
        await client.send_message(reply.sender_id, text)
        await event.edit("üì© –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –õ–°")
    else:
        await event.edit("‚ö† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —Ä–µ–ø–ª–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

# –®–∞–±–ª–æ–Ω—ã
@client.on(events.NewMessage(pattern=r"–õ \+—à–∞–±–ª–æ–Ω (\S+)"))
async def save_template(event):
    args = event.pattern_match.group(1)
    if event.is_reply:
        reply = await event.get_reply_message()
        saved_templates[args] = reply.message
        await event.edit(f"‚úÖ –®–∞–±–ª–æ–Ω `{args}` —Å–æ—Ö—Ä–∞–Ω—ë–Ω")
    else:
        await event.edit("‚ö† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å —Ä–µ–ø–ª–∞–µ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

@client.on(events.NewMessage(pattern=r"–õ —à–∞–±–ª–æ–Ω (\S+)"))
async def send_template(event):
    args = event.pattern_match.group(1)
    if args in saved_templates:
        await event.edit(saved_templates[args])
    else:
        await event.edit("‚ö† –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

@client.on(events.NewMessage(pattern=r"–õ -—à–∞–±–ª–æ–Ω (\S+)"))
async def delete_template(event):
    args = event.pattern_match.group(1)
    if args in saved_templates:
        del saved_templates[args]
        await event.edit(f"üóë –®–∞–±–ª–æ–Ω `{args}` —É–¥–∞–ª—ë–Ω")
    else:
        await event.edit("‚ö† –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")

@client.on(events.NewMessage(pattern=r"–õ —à–∞–±–ª–æ–Ω—ã –≤—Å–µ"))
async def list_templates(event):
    if saved_templates:
        templates_list = '\n'.join([f"{i+1}. {name}" for i, name in enumerate(saved_templates.keys())])
        await event.edit(f"üìÇ –°–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:\n{templates_list}")
    else:
        await event.edit("üì≠ –®–∞–±–ª–æ–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")

# –ü–∏–Ω–≥
@client.on(events.NewMessage(pattern=r"–õ –ø–∏–Ω–≥"))
async def ping(event):
    start_time = time.time()
    await event.edit("üèì –ü–∏–Ω–≥—É—é —Å–µ—Ä–≤–µ—Ä...")
    await asyncio.sleep(1)
    end_time = time.time()
    ping_time = round((end_time - start_time - 1) * 1000, 2)
    await event.edit(f"üèì –ü–æ–Ω–≥! –ó–∞–¥–µ—Ä–∂–∫–∞: {ping_time} –º—Å")

# –ß–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
@client.on(events.NewMessage(pattern=r"–õ —á–∞—Ç –∏–Ω—Ñ–æ"))
async def chat_info(event):
    chat = await event.get_chat()
    users = await client.get_participants(chat)
    humans = [user.id for user in users if not user.bot]
    bots = [user.id for user in users if user.bot]
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç–∞
    chat_name = chat.title or "–ë–µ–∑ –∏–º–µ–Ω–∏"
    chat_id = chat.id
    chat_type = "–ì—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç" if chat.megagroup else "–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    total_users = len(humans) + len(bots)
    active_users = len(humans)
    active_bots = len(bots)
    
    # –°–æ–∑–¥–∞—ë–º –∫—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥
    chat_info_msg = f"üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ**\n" \
                    f"üìù **–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞**: {chat_name}\n" \
                    f"üí¨ **ID —á–∞—Ç–∞**: {chat_id}\n" \
                    f"üîπ **–¢–∏–ø —á–∞—Ç–∞**: {chat_type}\n\n" \
                    f"üë• **–ß–∞—Å—Ç–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏**: {active_users}\n" \
                    f"ü§ñ **–ë–æ—Ç—ã**: {active_bots}\n" \
                    f"üë´ **–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤**: {total_users}"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    await event.edit(chat_info_msg)

# –ö–æ–º–∞–Ω–¥—ã
@client.on(events.NewMessage(pattern=r"–õ –∫–æ–º–∞–Ω–¥—ã"))
async def list_commands(event):
    commands = (
        "üìú –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n"
        "–õ +–∏–≥–Ω–æ—Ä / -–∏–≥–Ω–æ—Ä ‚Äî –¥–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å –≤ –∏–≥–Ω–æ—Ä-–ª–∏—Å—Ç\n"
        "–õ –∏–≥–Ω–æ—Ä—ã ‚Äî —Å–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "–õ +—á—Å / -—á—Å ‚Äî –¥–æ–±–∞–≤–∏—Ç—å/—É–±—Ä–∞—Ç—å –≤ –ß–°\n"
        "–õ –¥–¥(—á–∏—Å–ª–æ) ‚Äî —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
        "–õ –≤–ª—Å (—Ç–µ–∫—Å—Ç) ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –≤ –õ–°\n"
        "–õ +—à–∞–±–ª–æ–Ω / -—à–∞–±–ª–æ–Ω (–∏–º—è) ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω\n"
        "–õ —à–∞–±–ª–æ–Ω—ã –≤—Å–µ ‚Äî —Å–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤\n"
        "–õ —à–∞–±–ª–æ–Ω (–∏–º—è) ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω\n"
        "–õ –ø–∏–Ω–≥ ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É\n"
        "–õ —á–∞—Ç –∏–Ω—Ñ–æ ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ\n"
        "–õ –∫–æ–º–∞–Ω–¥—ã ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "–õ –ª–æ–≥ ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –ª–æ–≥–∞\n"
        "–õ –∞–¥–º–∏–Ω—ã ‚Äî —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞\n"
        "–õ +–∞–¥–º–∏–Ω ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã\n"
        "–õ -–∞–¥–º–∏–Ω ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n"
        "–õ –¥–æ–±–∞–≤–∏—Ç—å ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç\n"
        "–õ –∫–∏–∫ ‚Äî —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞\n"
    )
    await event.edit(commands)

# –ö–æ–º–∞–Ω–¥–∞ –õ –ª–æ–≥
@client.on(events.NewMessage(pattern=r"–õ –ª–æ–≥"))
async def send_log(event):
    if os.path.exists(LOG_FILE):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ —Ñ–∞–π–ª –≤ —á–∞—Ç
        await client.send_file(event.chat_id, LOG_FILE, caption="üìú –í–æ—Ç —Ñ–∞–π–ª –ª–æ–≥–∞:")
        await event.delete()  # –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
    else:
        await event.edit("‚ö† –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@client.on(events.NewMessage(pattern=r"–õ –∞–¥–º–∏–Ω—ã"))
async def list_admins(event):
    chat = await event.get_chat()
    admins = await client.get_chat_admins(chat.id)
    admin_list = "\n".join([f"{admin.user.first_name} (@{admin.user.username})" for admin in admins])
    await event.edit(f"üë• **–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤**:\n{admin_list}")

@client.on(events.NewMessage(pattern=r"–õ \+–∞–¥–º–∏–Ω"))
async def add_admin(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        user_id = reply.sender_id
        await client.add_chat_admin(event.chat_id, user_id)
        await event.edit("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç–∞–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")

@client.on(events.NewMessage(pattern=r"–õ -–∞–¥–º–∏–Ω"))
async def remove_admin(event):
    if event.is_reply:
        reply = await event.get_reply_message()
        user_id = reply.sender_id
        await client.remove_chat_admin(event.chat_id, user_id)
        await event.edit("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")

# –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
with client:
    print("‚úÖ Userbot –∑–∞–ø—É—â–µ–Ω!")
    client.run_until_disconnected()
